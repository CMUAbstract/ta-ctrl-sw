import serial,time

ESP_BYTE0 = 34
ESP_BYTE1 = 105
RF_KILL = 0x3F
ACK = 0x10
ASCII = 0x11
EXPT_WAKE = 0x27
EXPT_DONE = 0x28
KILL_KEYS = b'FORBESavePA15213'
ASCII_MSG = b'YINZ IS JAGOFFS!'
BOOTLOADER_ACK = 0x01
GET_TELEM_ASCII = 0xC8
GET_EXPT_ASCII = 0xC5

hwid0 =65
hwid1 = 66
seqnum0 = 67
seqnum1 = 68
dest = 1
serWrite0 = serial.Serial('/dev/ttyUSB0', 115200);
#serRead0 = serial.Serial('/dev/ttyACM1', 115200);

short_len = 0x6
ack_message = bytearray([ESP_BYTE0, ESP_BYTE1, short_len, 0x61, 0x74,
seqnum0, seqnum1, 0x02, ACK])

bootloader_ack_message = bytearray([ESP_BYTE0, ESP_BYTE1, short_len, 0x61, 0x74,
seqnum0, seqnum1, 0x02, BOOTLOADER_ACK])

#while 1:
#  print("msg")
#  serWrite0.write(ack_message)
#  #while serRead0.inWaiting:
#  #  data = serRead0.readline()
#  #  print("Data are: ", data)
#  time.sleep(1)

total_len = 19

ascii_message = bytearray([ESP_BYTE0, ESP_BYTE1, total_len, hwid0, hwid1,
seqnum0, seqnum1, dest, ASCII, 0x59, 0x49, 0x4e ,0x5a,0x20,0x4a, 0x41,0x47,
0x4f, 0x46, 0x46, 0x53,0x21])

total_len = 15
xfer_message = bytearray([ESP_BYTE0, ESP_BYTE1, total_len, hwid0, hwid1,
seqnum0, seqnum1, dest, ASCII, EXPT_WAKE,0x53,0x63,0x6f,0x74,0x74,0x79,0x54,0x41])

total_len = 7
done_message = bytearray([ESP_BYTE0, ESP_BYTE1, total_len, hwid0, hwid1,
seqnum0, seqnum1, dest, ASCII, EXPT_DONE])

total_len = 6
sim_message = bytearray([ESP_BYTE0, ESP_BYTE1, total_len, 0x61, 0x74,seqnum0,
seqnum1,0x0a,ACK])

total_len = 7
get_telem_ascii_message = bytearray([ESP_BYTE0, ESP_BYTE1, total_len, hwid0, hwid1,
seqnum0, seqnum1, 0x0a, ASCII, GET_TELEM_ASCII])

total_len = 7
get_expt_ascii_message = bytearray([ESP_BYTE0, ESP_BYTE1, total_len, hwid0, hwid1,
seqnum0, seqnum1, 0x0a, ASCII, GET_EXPT_ASCII])


set_time_tle = bytearray([0x22, 0x69, 0x0e, 0x61, 0x74, 0x00, 0x00, 0xa2, 0x14,
0x15, 0x72, 0xf6, 0x28, 0x00, 0x9e, 0xf7, 0x0a])

check_time_tle = bytearray([0x22, 0x69, 0x06, 0x61, 0x74, 0x01, 0x00, 0xa2,0x13])

set_tle = bytearray([0x22, 0x69, 0xab, 0x61, 0x74, 0x02, 0x00, 0x02, 0x11, 0x54,
0x4c, 0x45, 0x46, 0x4c, 0x4f, 0x43, 0x4b, 0x20, 0x33, 0x4b, 0x2d, 0x35, 0x20,
0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
0x31, 0x20, 0x34, 0x33, 0x38, 0x39, 0x39, 0x55, 0x20, 0x31, 0x38, 0x31, 0x31,
0x31, 0x5a, 0x20, 0x20, 0x20, 0x32, 0x31, 0x32, 0x38, 0x34, 0x2e, 0x36, 0x36,
0x32, 0x34, 0x36, 0x31, 0x31, 0x31, 0x20, 0x20, 0x2e, 0x30, 0x30, 0x30, 0x31,
0x34, 0x36, 0x33, 0x37, 0x20, 0x20, 0x30, 0x30, 0x30, 0x30, 0x30, 0x2d, 0x30,
0x20, 0x20, 0x35, 0x31, 0x35, 0x38, 0x32, 0x2d, 0x33, 0x20, 0x30, 0x20, 0x20,
0x39, 0x39, 0x39, 0x34, 0x32, 0x20, 0x34, 0x33, 0x38, 0x39, 0x39, 0x20, 0x20,
0x39, 0x37, 0x2e, 0x32, 0x31, 0x37, 0x39, 0x20, 0x31, 0x37, 0x36, 0x2e, 0x37,
0x35, 0x36, 0x30, 0x20, 0x30, 0x30, 0x31, 0x38, 0x30, 0x35, 0x38, 0x20, 0x32,
0x33, 0x32, 0x2e, 0x37, 0x37, 0x35, 0x38, 0x20, 0x31, 0x32, 0x37, 0x2e, 0x31,
0x38, 0x33, 0x35, 0x20, 0x31, 0x35, 0x2e, 0x32, 0x39, 0x32, 0x32, 0x36, 0x35,
0x33, 0x33, 0x31, 0x35, 0x35, 0x34, 0x37, 0x35])

#while(1):
#  serWrite0.write(set_time_tle)
#  time.sleep(1)
#  serWrite0.write(check_time_tle)
#  time.sleep(1)
#  serWrite0.write(set_tle)
#  time.sleep(1)
#  serWrite0.write(get_expt_ascii_message)
#  time.sleep(1)
#  serWrite0.write(bootloader_ack_message)
#  time.sleep(10)
#

while(1):
  serWrite0.write(ack_message)
  #serWrite0.write(get_telem_ascii_message)
  time.sleep(1)

# Test stand in for gnd station
while(1):
  serWrite0.write(get_telem_ascii_message)
  time.sleep(.2)
  serWrite0.write(get_telem_ascii_message)
  time.sleep(.2)
  serWrite0.write(get_telem_ascii_message)
  time.sleep(.2)
  serWrite0.write(get_expt_ascii_message)
  time.sleep(.2)
  serWrite0.write(get_expt_ascii_message)
  time.sleep(.2)
  serWrite0.write(get_expt_ascii_message)
  time.sleep(.2)
  #while serRead0.inWaiting:
  #  data = serRead0.readline()
  #  print(data)
  time.sleep(5)


# send turn on twice
serWrite0.write(xfer_message);
time.sleep(1);
serWrite0.write(xfer_message);
time.sleep(1);
for i in range(2):
  serWrite0.write(ascii_message);
  time.sleep(1)
  # Now open /dev/ttyACM1 and look for output

# Now disable
serWrite0.write(done_message);
time.sleep(1)
serWrite0.write(done_message);
time.sleep(1)

# Now make sure we don't output anything
for i in range(3):
  serWrite0.write(ascii_message);
  time.sleep(1)
