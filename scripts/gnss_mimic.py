import serial
import sys
import time

gpgga = b'$GNGGA,115739.00,4158.8441367,N,09147.4416929,W,4,13,0.9,255.747,M,-32.00,M,01,0000*6E'

b'$GPRMC,161229.487,A,3723.2475,N,12158.3416,W,0.13,309.62,120598, ,*10'
disableHex = [0xA0,0x0A,0xA1,0x10,0x00,0x00,0x09,0x90,0x08,0x80,
0x01,0x10,0x01,0x10,0x00,0x00,0x01,
0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x09,0x90,0x0D,0xD0,0x0A]

#disable = bytearray(disableHex)
serWrite0 = serial.Serial('/dev/ttyACM1', 9600);
#serWrite0.write(disable)
#sys.exit(0)

goodRMC = [0x24, 0x47, 0x4E, 0x52, 0x4D, 0x43, 0x2C,0x31, 0x31, 0x35, 0x39, 0x34, 0x35,
0x2E, 0x31, 0x32, 0x36, 0x35, 0x36, 0x32, 0x2C, 0x41, 0x2C, 0x34, 0x30, 0x32,
0x36, 0x2E, 0x36, 0x32, 0x37, 0x38, 0x2C, 0x4E, 0x2C, 0x30, 0x37, 0x39, 0x35,
0x36, 0x2E, 0x37, 0x33, 0x37, 0x30, 0x2C, 0x57, 0x2C, 0x30, 0x2E, 0x30, 0x30,
0x30, 0x2C, 0x30, 0x30, 0x30, 0x2E, 0x30, 0x2C, 0x30, 0x32, 0x30, 0x39, 0x32,
0x31, 0x2C, 0x2C, 0x2C, 0x41, 0x2A, 0x35, 0x32, 0x0D, 0x0A]

badRMC = [0x24, 0x47, 0x4E, 0x52, 0x4D, 0x43, 0x2C, 0x31, 0x31, 0x35, 0x39, 0x34, 0x35,
0x2E, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x2C, 0x56, 0x2C, 0x30, 0x30, 0x30,
0x30, 0x2E, 0x30, 0x30, 0x30, 0x30, 0x2C, 0x4E, 0x2C, 0x30, 0x30, 0x30, 0x30,
0x30, 0x2E, 0x30, 0x30, 0x30, 0x30, 0x2C, 0x45, 0x2C, 0x30, 0x2E, 0x30, 0x30,
0x30, 0x2C, 0x30, 0x30, 0x30, 0x2E, 0x30, 0x2C, 0x32, 0x38, 0x30, 0x36, 0x30,
0x36, 0x2C, 0x2C, 0x2C, 0x4E, 0x2A, 0x35, 0x46, 0x0D, 0x0A]

while 1:
  print("msg")
  for repeat in range(0,10):
    time.sleep(1)
    serWrite0.write(goodRMC)
    continue; #TODO take this out!!!
    for i in range(6):
      lsb = goodRMC[12 - i]
      if lsb != 0x39:
        lsb += 1
        goodRMC[12 - i] = lsb
        badRMC[12 - i] = lsb
        break
      else:
        goodRMC[12 - i] = 0x30
        badRMC[12 - i] = 0x30
    print("Good")
    #for elem in goodRMC:
    #  print chr(elem),
  continue # TODO take this out!!!
  for repeat in range(0,30):
    time.sleep(1)
    serWrite0.write(badRMC)
    for i in range(6):
      lsb = goodRMC[12 - i]
      if lsb != 0x39:
        lsb += 1
        goodRMC[12 - i] = lsb
        badRMC[12 - i] = lsb
        break
      else:
        goodRMC[12 - i] = 0x30
        badRMC[12 - i] = 0x30
    print("bad")
  print()

